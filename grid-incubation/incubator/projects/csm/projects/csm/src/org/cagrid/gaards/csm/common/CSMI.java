/**
*============================================================================
*  The Ohio State University Research Foundation, Emory University,
*  the University of Minnesota Supercomputing Institute
*
*  Distributed under the OSI-approved BSD 3-Clause License.
*  See http://ncip.github.com/cagrid-grid-incubation/LICENSE.txt for details.
*============================================================================
**/
/**
*============================================================================
*============================================================================
**/
package org.cagrid.gaards.csm.common;

import java.rmi.RemoteException;

import org.cagrid.gaards.csm.stubs.types.AccessDeniedFault;
import org.cagrid.gaards.csm.stubs.types.CSMInternalFault;
import org.cagrid.gaards.csm.stubs.types.CSMTransactionFault;

/** 
 * This class is autogenerated, DO NOT EDIT.
 * 
 * This interface represents the API which is accessable on the grid service from the client. 
 * 
 * @created by Introduce Toolkit version 1.3
 * 
 */
public interface CSMI {

  public org.oasis.wsrf.properties.GetMultipleResourcePropertiesResponse getMultipleResourceProperties(org.oasis.wsrf.properties.GetMultipleResourceProperties_Element params) throws RemoteException ;

  public org.oasis.wsrf.properties.GetResourcePropertyResponse getResourceProperty(javax.xml.namespace.QName params) throws RemoteException ;

  public org.oasis.wsrf.properties.QueryResourcePropertiesResponse queryResourceProperties(org.oasis.wsrf.properties.QueryResourceProperties_Element params) throws RemoteException ;

  public org.cagrid.gaards.csm.bean.Application[] getApplications(org.cagrid.gaards.csm.bean.ApplicationSearchCriteria applicationSearchCriteria) throws RemoteException, org.cagrid.gaards.csm.stubs.types.CSMInternalFault ;

  /**
   * This method allows a CSM Web Service administrator to create an application context for managing security policy.
   *
   * @param application
   * @throws CSMInternalFault
   *	
   * @throws AccessDeniedFault
   *	
   * @throws CSMTransactionFault
   *	
   */
  public org.cagrid.gaards.csm.bean.Application createApplication(org.cagrid.gaards.csm.bean.Application application) throws RemoteException, org.cagrid.gaards.csm.stubs.types.CSMInternalFault, org.cagrid.gaards.csm.stubs.types.AccessDeniedFault, org.cagrid.gaards.csm.stubs.types.CSMTransactionFault ;

  /**
   * This method allows a CSM Web Service administrator to remove an application context.
   *
   * @param applicationId
   * @throws CSMInternalFault
   *	
   * @throws AccessDeniedFault
   *	
   * @throws CSMTransactionFault
   *	
   */
  public void removeApplication(long applicationId) throws RemoteException, org.cagrid.gaards.csm.stubs.types.CSMInternalFault, org.cagrid.gaards.csm.stubs.types.AccessDeniedFault, org.cagrid.gaards.csm.stubs.types.CSMTransactionFault ;

  /**
   * This method allows an administrator of an application to create a protection element in that application.
   *
   * @param pe
   * @throws CSMInternalFault
   *	
   * @throws AccessDeniedFault
   *	
   * @throws CSMTransactionFault
   *	
   */
  public org.cagrid.gaards.csm.bean.ProtectionElement createProtectionElement(org.cagrid.gaards.csm.bean.ProtectionElement pe) throws RemoteException, org.cagrid.gaards.csm.stubs.types.CSMInternalFault, org.cagrid.gaards.csm.stubs.types.AccessDeniedFault, org.cagrid.gaards.csm.stubs.types.CSMTransactionFault ;

  /**
   * The method allows an administrators of an application to search for protection elements associated with that application.
   *
   * @param criteria
   * @throws CSMInternalFault
   *	
   * @throws AccessDeniedFault
   *	
   * @throws CSMTransactionFault
   *	
   */
  public org.cagrid.gaards.csm.bean.ProtectionElement[] getProtectionElements(org.cagrid.gaards.csm.bean.ProtectionElementSearchCriteria criteria) throws RemoteException, org.cagrid.gaards.csm.stubs.types.CSMInternalFault, org.cagrid.gaards.csm.stubs.types.AccessDeniedFault, org.cagrid.gaards.csm.stubs.types.CSMTransactionFault ;

  /**
   * This method allow an application administrator to modify a protection element associated with the application.
   *
   * @param protectionElement
   * @throws CSMInternalFault
   *	
   * @throws AccessDeniedFault
   *	
   * @throws CSMTransactionFault
   *	
   */
  public org.cagrid.gaards.csm.bean.ProtectionElement modifyProtectionElement(org.cagrid.gaards.csm.bean.ProtectionElement protectionElement) throws RemoteException, org.cagrid.gaards.csm.stubs.types.CSMInternalFault, org.cagrid.gaards.csm.stubs.types.AccessDeniedFault, org.cagrid.gaards.csm.stubs.types.CSMTransactionFault ;

  /**
   * This method allows an application administrator to remove a protection element.
   *
   * @param protectionElementId
   * @throws CSMInternalFault
   *	
   * @throws AccessDeniedFault
   *	
   * @throws CSMTransactionFault
   *	
   */
  public void removeProtectionElement(long protectionElementId) throws RemoteException, org.cagrid.gaards.csm.stubs.types.CSMInternalFault, org.cagrid.gaards.csm.stubs.types.AccessDeniedFault, org.cagrid.gaards.csm.stubs.types.CSMTransactionFault ;

  /**
   * This method allows an application admin to create a protection group.
   *
   * @param pg
   * @throws CSMInternalFault
   *	
   * @throws AccessDeniedFault
   *	
   * @throws CSMTransactionFault
   *	
   */
  public org.cagrid.gaards.csm.bean.ProtectionGroup createProtectionGroup(org.cagrid.gaards.csm.bean.ProtectionGroup pg) throws RemoteException, org.cagrid.gaards.csm.stubs.types.CSMInternalFault, org.cagrid.gaards.csm.stubs.types.AccessDeniedFault, org.cagrid.gaards.csm.stubs.types.CSMTransactionFault ;

  /**
   * This method allows an application admin to search for protection groups associated with the application.
   *
   * @param criteria
   * @throws CSMInternalFault
   *	
   * @throws AccessDeniedFault
   *	
   * @throws CSMTransactionFault
   *	
   */
  public org.cagrid.gaards.csm.bean.ProtectionGroup[] getProtectionGroups(org.cagrid.gaards.csm.bean.ProtectionGroupSearchCriteria criteria) throws RemoteException, org.cagrid.gaards.csm.stubs.types.CSMInternalFault, org.cagrid.gaards.csm.stubs.types.AccessDeniedFault, org.cagrid.gaards.csm.stubs.types.CSMTransactionFault ;

  /**
   * This method allows an application admin to modify a protection group associated with the application
   *
   * @param pg
   * @throws CSMInternalFault
   *	
   * @throws AccessDeniedFault
   *	
   * @throws CSMTransactionFault
   *	
   */
  public org.cagrid.gaards.csm.bean.ProtectionGroup modifyProtectionGroup(org.cagrid.gaards.csm.bean.ProtectionGroup pg) throws RemoteException, org.cagrid.gaards.csm.stubs.types.CSMInternalFault, org.cagrid.gaards.csm.stubs.types.AccessDeniedFault, org.cagrid.gaards.csm.stubs.types.CSMTransactionFault ;

  /**
   * This method allows an admin to remove a protection group associated with the application.
   *
   * @param protectionGroupId
   * @throws CSMInternalFault
   *	
   * @throws AccessDeniedFault
   *	
   * @throws CSMTransactionFault
   *	
   */
  public void removeProtectionGroup(long protectionGroupId) throws RemoteException, org.cagrid.gaards.csm.stubs.types.CSMInternalFault, org.cagrid.gaards.csm.stubs.types.AccessDeniedFault, org.cagrid.gaards.csm.stubs.types.CSMTransactionFault ;

  /**
   * This method allows a application admin to assign protection elements to a protection group.
   *
   * @param protectionGroupId
   * @param protectionElements
   * @throws CSMInternalFault
   *	
   * @throws AccessDeniedFault
   *	
   * @throws CSMTransactionFault
   *	
   */
  public void assignProtectionElements(long protectionGroupId,long[] protectionElements) throws RemoteException, org.cagrid.gaards.csm.stubs.types.CSMInternalFault, org.cagrid.gaards.csm.stubs.types.AccessDeniedFault, org.cagrid.gaards.csm.stubs.types.CSMTransactionFault ;

  /**
   * This method allows a application admin to unassign protection elements from a protection group.
   *
   * @param protectionGroupId
   * @param protectionElements
   * @throws CSMInternalFault
   *	
   * @throws AccessDeniedFault
   *	
   * @throws CSMTransactionFault
   *	
   */
  public void unassignProtectionElements(long protectionGroupId,long[] protectionElements) throws RemoteException, org.cagrid.gaards.csm.stubs.types.CSMInternalFault, org.cagrid.gaards.csm.stubs.types.AccessDeniedFault, org.cagrid.gaards.csm.stubs.types.CSMTransactionFault ;

  /**
   * This method gets a list of protection elements assigned to a protection group.
   *
   * @param protectionGroupId
   * @throws CSMInternalFault
   *	
   * @throws AccessDeniedFault
   *	
   * @throws CSMTransactionFault
   *	
   */
  public org.cagrid.gaards.csm.bean.ProtectionElement[] getProtectionElementsAssignedToProtectionGroup(long protectionGroupId) throws RemoteException, org.cagrid.gaards.csm.stubs.types.CSMInternalFault, org.cagrid.gaards.csm.stubs.types.AccessDeniedFault, org.cagrid.gaards.csm.stubs.types.CSMTransactionFault ;

  /**
   * This method alls an application admin to assign a protection group as a child or another protection group.
   *
   * @param parentProtectionGroupId
   * @param childProtectionGroupId
   * @throws CSMInternalFault
   *	
   * @throws AccessDeniedFault
   *	
   * @throws CSMTransactionFault
   *	
   */
  public void assignProtectionGroup(long parentProtectionGroupId,long childProtectionGroupId) throws RemoteException, org.cagrid.gaards.csm.stubs.types.CSMInternalFault, org.cagrid.gaards.csm.stubs.types.AccessDeniedFault, org.cagrid.gaards.csm.stubs.types.CSMTransactionFault ;

  /**
   * This method allows an application admin to unassign a protection group from being a child of a protection group.
   *
   * @param parentProtectionGroupId
   * @param childProtectionGroupId
   * @throws CSMInternalFault
   *	
   * @throws AccessDeniedFault
   *	
   * @throws CSMTransactionFault
   *	
   */
  public void unassignProtectionGroup(long parentProtectionGroupId,long childProtectionGroupId) throws RemoteException, org.cagrid.gaards.csm.stubs.types.CSMInternalFault, org.cagrid.gaards.csm.stubs.types.AccessDeniedFault, org.cagrid.gaards.csm.stubs.types.CSMTransactionFault ;

  /**
   * This method allows an application admin to get a list of child protection groups for a protection group
   *
   * @param protectionGroupId
   * @throws CSMInternalFault
   *	
   * @throws AccessDeniedFault
   *	
   * @throws CSMTransactionFault
   *	
   */
  public org.cagrid.gaards.csm.bean.ProtectionGroup[] getChildProtectionGroups(long protectionGroupId) throws RemoteException, org.cagrid.gaards.csm.stubs.types.CSMInternalFault, org.cagrid.gaards.csm.stubs.types.AccessDeniedFault, org.cagrid.gaards.csm.stubs.types.CSMTransactionFault ;

  /**
   * This method allow an application admin to get a list of the groups associated with the application.
   *
   * @param criteria
   * @throws CSMInternalFault
   *	
   * @throws AccessDeniedFault
   *	
   * @throws CSMTransactionFault
   *	
   */
  public org.cagrid.gaards.csm.bean.Group[] getGroups(org.cagrid.gaards.csm.bean.GroupSearchCriteria criteria) throws RemoteException, org.cagrid.gaards.csm.stubs.types.CSMInternalFault, org.cagrid.gaards.csm.stubs.types.AccessDeniedFault, org.cagrid.gaards.csm.stubs.types.CSMTransactionFault ;

  /**
   * This method allows an application administrator to link a Grid Grouper group to CSM, such that access control policy may be provisioned based on membership to the Grid Grouper group.
   *
   * @param req
   * @throws CSMInternalFault
   *	
   * @throws AccessDeniedFault
   *	
   * @throws CSMTransactionFault
   *	
   */
  public org.cagrid.gaards.csm.bean.RemoteGroup linkRemoteGroup(org.cagrid.gaards.csm.bean.LinkRemoteGroupRequest req) throws RemoteException, org.cagrid.gaards.csm.stubs.types.CSMInternalFault, org.cagrid.gaards.csm.stubs.types.AccessDeniedFault, org.cagrid.gaards.csm.stubs.types.CSMTransactionFault ;

  /**
   * This method allow an application admin to unlink a remote Grid Grouper group from CSM.
   *
   * @param applicationId
   * @param groupId
   * @throws CSMInternalFault
   *	
   * @throws AccessDeniedFault
   *	
   * @throws CSMTransactionFault
   *	
   */
  public void unlinkRemoteGroup(long applicationId,long groupId) throws RemoteException, org.cagrid.gaards.csm.stubs.types.CSMInternalFault, org.cagrid.gaards.csm.stubs.types.AccessDeniedFault, org.cagrid.gaards.csm.stubs.types.CSMTransactionFault ;

  /**
   * This method allows a application admin to create a local group of users on the CSM Web Service
   *
   * @param grp
   */
  public org.cagrid.gaards.csm.bean.LocalGroup createGroup(org.cagrid.gaards.csm.bean.LocalGroup grp) throws RemoteException ;

  /**
   * This method allows an application administrator to remove a local group.
   *
   * @param groupId
   * @throws CSMInternalFault
   *	
   * @throws AccessDeniedFault
   *	
   * @throws CSMTransactionFault
   *	
   */
  public void removeGroup(long groupId) throws RemoteException, org.cagrid.gaards.csm.stubs.types.CSMInternalFault, org.cagrid.gaards.csm.stubs.types.AccessDeniedFault, org.cagrid.gaards.csm.stubs.types.CSMTransactionFault ;

  /**
   * This method allows an application administrator to modify the metadata of a local group.
   *
   * @param grp
   * @throws CSMInternalFault
   *	
   * @throws AccessDeniedFault
   *	
   * @throws CSMTransactionFault
   *	
   */
  public org.cagrid.gaards.csm.bean.LocalGroup modifyGroup(org.cagrid.gaards.csm.bean.LocalGroup grp) throws RemoteException, org.cagrid.gaards.csm.stubs.types.CSMInternalFault, org.cagrid.gaards.csm.stubs.types.AccessDeniedFault, org.cagrid.gaards.csm.stubs.types.CSMTransactionFault ;

  /**
   * This method allows an application admin to add users to a user group
   *
   * @param groupId
   * @param users
   * @throws CSMInternalFault
   *	
   * @throws AccessDeniedFault
   *	
   * @throws CSMTransactionFault
   *	
   */
  public void addUsersToGroup(long groupId,java.lang.String[] users) throws RemoteException, org.cagrid.gaards.csm.stubs.types.CSMInternalFault, org.cagrid.gaards.csm.stubs.types.AccessDeniedFault, org.cagrid.gaards.csm.stubs.types.CSMTransactionFault ;

  /**
   * This method allows an application admin to remove users from a user group.
   *
   * @param groupId
   * @param users
   * @throws CSMInternalFault
   *	
   * @throws CSMTransactionFault
   *	
   * @throws AccessDeniedFault
   *	
   */
  public void removeUsersFromGroup(long groupId,java.lang.String[] users) throws RemoteException, org.cagrid.gaards.csm.stubs.types.CSMInternalFault, org.cagrid.gaards.csm.stubs.types.CSMTransactionFault, org.cagrid.gaards.csm.stubs.types.AccessDeniedFault ;

  /**
   * This method allows an application admin to get a list of the users in a user group.
   *
   * @param groupId
   * @throws CSMInternalFault
   *	
   * @throws AccessDeniedFault
   *	
   * @throws CSMTransactionFault
   *	
   */
  public java.lang.String[] getUsersInGroup(long groupId) throws RemoteException, org.cagrid.gaards.csm.stubs.types.CSMInternalFault, org.cagrid.gaards.csm.stubs.types.AccessDeniedFault, org.cagrid.gaards.csm.stubs.types.CSMTransactionFault ;

  /**
   * This method allow an admin to create privileges.
   *
   * @param privilege
   * @throws CSMInternalFault
   *	
   * @throws AccessDeniedFault
   *	
   * @throws CSMTransactionFault
   *	
   */
  public org.cagrid.gaards.csm.bean.Privilege createPrivilege(org.cagrid.gaards.csm.bean.Privilege privilege) throws RemoteException, org.cagrid.gaards.csm.stubs.types.CSMInternalFault, org.cagrid.gaards.csm.stubs.types.AccessDeniedFault, org.cagrid.gaards.csm.stubs.types.CSMTransactionFault ;

  /**
   * This method allows one to search for privileges
   *
   * @param criteria
   * @throws CSMInternalFault
   *	
   * @throws CSMTransactionFault
   *	
   */
  public org.cagrid.gaards.csm.bean.Privilege[] getPrivileges(org.cagrid.gaards.csm.bean.PrivilegeSearchCriteria criteria) throws RemoteException, org.cagrid.gaards.csm.stubs.types.CSMInternalFault, org.cagrid.gaards.csm.stubs.types.CSMTransactionFault ;

  /**
   * This method allows an admin to remove a privilege.
   *
   * @param privilegeId
   * @throws CSMInternalFault
   *	
   * @throws AccessDeniedFault
   *	
   * @throws CSMTransactionFault
   *	
   */
  public void removePrivilege(long privilegeId) throws RemoteException, org.cagrid.gaards.csm.stubs.types.CSMInternalFault, org.cagrid.gaards.csm.stubs.types.AccessDeniedFault, org.cagrid.gaards.csm.stubs.types.CSMTransactionFault ;

  /**
   * This method allo.ws an admin to modify a privilege
   *
   * @param privilege
   * @throws CSMInternalFault
   *	
   * @throws AccessDeniedFault
   *	
   * @throws CSMTransactionFault
   *	
   */
  public org.cagrid.gaards.csm.bean.Privilege modifyPrivilege(org.cagrid.gaards.csm.bean.Privilege privilege) throws RemoteException, org.cagrid.gaards.csm.stubs.types.CSMInternalFault, org.cagrid.gaards.csm.stubs.types.AccessDeniedFault, org.cagrid.gaards.csm.stubs.types.CSMTransactionFault ;

  /**
   * This method allows an application administrator to create a role.
   *
   * @param role
   * @throws CSMInternalFault
   *	
   * @throws AccessDeniedFault
   *	
   * @throws CSMTransactionFault
   *	
   */
  public org.cagrid.gaards.csm.bean.Role createRole(org.cagrid.gaards.csm.bean.Role role) throws RemoteException, org.cagrid.gaards.csm.stubs.types.CSMInternalFault, org.cagrid.gaards.csm.stubs.types.AccessDeniedFault, org.cagrid.gaards.csm.stubs.types.CSMTransactionFault ;

  /**
   * This method allows and admin to get a list of roles based on a specified search criteria.
   *
   * @param criteria
   * @throws CSMInternalFault
   *	
   * @throws AccessDeniedFault
   *	
   * @throws CSMTransactionFault
   *	
   */
  public org.cagrid.gaards.csm.bean.Role[] getRoles(org.cagrid.gaards.csm.bean.RoleSearchCriteria criteria) throws RemoteException, org.cagrid.gaards.csm.stubs.types.CSMInternalFault, org.cagrid.gaards.csm.stubs.types.AccessDeniedFault, org.cagrid.gaards.csm.stubs.types.CSMTransactionFault ;

  /**
   * This method allows an application admin to modify a role.
   *
   * @param role
   * @throws CSMInternalFault
   *	
   * @throws AccessDeniedFault
   *	
   * @throws CSMTransactionFault
   *	
   */
  public org.cagrid.gaards.csm.bean.Role modifyRole(org.cagrid.gaards.csm.bean.Role role) throws RemoteException, org.cagrid.gaards.csm.stubs.types.CSMInternalFault, org.cagrid.gaards.csm.stubs.types.AccessDeniedFault, org.cagrid.gaards.csm.stubs.types.CSMTransactionFault ;

  /**
   * This method allows an application admin to remove a role.
   *
   * @param roleId
   * @throws CSMInternalFault
   *	
   * @throws AccessDeniedFault
   *	
   * @throws CSMTransactionFault
   *	
   */
  public void removeRole(long roleId) throws RemoteException, org.cagrid.gaards.csm.stubs.types.CSMInternalFault, org.cagrid.gaards.csm.stubs.types.AccessDeniedFault, org.cagrid.gaards.csm.stubs.types.CSMTransactionFault ;

  /**
   * This method allows an application admin to set the privileges that make up a role.
   *
   * @param roleId
   * @param privs
   * @throws CSMInternalFault
   *	
   * @throws AccessDeniedFault
   *	
   * @throws CSMTransactionFault
   *	
   */
  public void setPrivilegesForRole(long roleId,long[] privs) throws RemoteException, org.cagrid.gaards.csm.stubs.types.CSMInternalFault, org.cagrid.gaards.csm.stubs.types.AccessDeniedFault, org.cagrid.gaards.csm.stubs.types.CSMTransactionFault ;

  /**
   * This method allows an application admin to get the privileges associated with a role.
   *
   * @param roleId
   * @throws CSMInternalFault
   *	
   * @throws AccessDeniedFault
   *	
   * @throws CSMTransactionFault
   *	
   */
  public org.cagrid.gaards.csm.bean.Privilege[] getPrivilegesForRole(long roleId) throws RemoteException, org.cagrid.gaards.csm.stubs.types.CSMInternalFault, org.cagrid.gaards.csm.stubs.types.AccessDeniedFault, org.cagrid.gaards.csm.stubs.types.CSMTransactionFault ;

  /**
   * This method allows an admin to grant a permission to a user group.
   *
   * @param groupId
   * @param roleId
   * @param protectionGroupId
   * @throws CSMInternalFault
   *	
   * @throws AccessDeniedFault
   *	
   * @throws CSMTransactionFault
   *	
   */
  public void grantGroupPermission(long groupId,long roleId,long protectionGroupId) throws RemoteException, org.cagrid.gaards.csm.stubs.types.CSMInternalFault, org.cagrid.gaards.csm.stubs.types.AccessDeniedFault, org.cagrid.gaards.csm.stubs.types.CSMTransactionFault ;

  /**
   * This method allows an application admin to revoke a permission from a user group.
   *
   * @param groupId
   * @param roleId
   * @param protectionGroupId
   * @throws CSMInternalFault
   *	
   * @throws AccessDeniedFault
   *	
   * @throws CSMTransactionFault
   *	
   */
  public void revokeGroupPermission(long groupId,long roleId,long protectionGroupId) throws RemoteException, org.cagrid.gaards.csm.stubs.types.CSMInternalFault, org.cagrid.gaards.csm.stubs.types.AccessDeniedFault, org.cagrid.gaards.csm.stubs.types.CSMTransactionFault ;

  /**
   * This method allows an application admin to grant a user a permission.
   *
   * @param userIdentity
   * @param roleId
   * @param protectionGroupId
   * @throws CSMInternalFault
   *	
   * @throws AccessDeniedFault
   *	
   * @throws CSMTransactionFault
   *	
   */
  public void grantUserPermission(java.lang.String userIdentity,long roleId,long protectionGroupId) throws RemoteException, org.cagrid.gaards.csm.stubs.types.CSMInternalFault, org.cagrid.gaards.csm.stubs.types.AccessDeniedFault, org.cagrid.gaards.csm.stubs.types.CSMTransactionFault ;

  /**
   * This method allows an application admin to revoke a permission from a user.
   *
   * @param userIdentity
   * @param roleId
   * @param protectionGroupId
   * @throws CSMInternalFault
   *	
   * @throws AccessDeniedFault
   *	
   * @throws CSMTransactionFault
   *	
   */
  public void revokeUserPermission(java.lang.String userIdentity,long roleId,long protectionGroupId) throws RemoteException, org.cagrid.gaards.csm.stubs.types.CSMInternalFault, org.cagrid.gaards.csm.stubs.types.AccessDeniedFault, org.cagrid.gaards.csm.stubs.types.CSMTransactionFault ;

  /**
   * This method allows application admins to get the permission granted to a user.
   *
   * @param applicationId
   * @param userIdentity
   * @throws CSMInternalFault
   *	
   * @throws AccessDeniedFault
   *	
   * @throws CSMTransactionFault
   *	
   */
  public org.cagrid.gaards.csm.bean.Permission[] getPermissionsForUser(long applicationId,java.lang.String userIdentity) throws RemoteException, org.cagrid.gaards.csm.stubs.types.CSMInternalFault, org.cagrid.gaards.csm.stubs.types.AccessDeniedFault, org.cagrid.gaards.csm.stubs.types.CSMTransactionFault ;

  /**
   * This method allows an application admin to get the permissions granted to a user group.
   *
   * @param groupId
   * @throws CSMInternalFault
   *	
   * @throws AccessDeniedFault
   *	
   * @throws CSMTransactionFault
   *	
   */
  public org.cagrid.gaards.csm.bean.Permission[] getPermissionForGroup(long groupId) throws RemoteException, org.cagrid.gaards.csm.stubs.types.CSMInternalFault, org.cagrid.gaards.csm.stubs.types.AccessDeniedFault, org.cagrid.gaards.csm.stubs.types.CSMTransactionFault ;

  /**
   * This method allows an application admin to get the parent protection group of a protection group.
   *
   * @param childProtectionGroupId
   * @throws CSMInternalFault
   *	
   * @throws AccessDeniedFault
   *	
   * @throws CSMTransactionFault
   *	
   */
  public org.cagrid.gaards.csm.bean.ProtectionGroup getParentProtectionGroup(long childProtectionGroupId) throws RemoteException, org.cagrid.gaards.csm.stubs.types.CSMInternalFault, org.cagrid.gaards.csm.stubs.types.AccessDeniedFault, org.cagrid.gaards.csm.stubs.types.CSMTransactionFault ;

  /**
   * This method allow one to determine if a user has been granted a privilege on a resource.
   *
   * @param applicationId
   * @param userIdentity
   * @param objectId
   * @param privilege
   * @throws CSMInternalFault
   *	
   * @throws CSMTransactionFault
   *	
   */
  public boolean checkPermission(long applicationId,java.lang.String userIdentity,java.lang.String objectId,java.lang.String privilege) throws RemoteException, org.cagrid.gaards.csm.stubs.types.CSMInternalFault, org.cagrid.gaards.csm.stubs.types.CSMTransactionFault ;

  /**
   * This method allows one to determine whether or not a user has been granted a privilege on a resource.
   *
   * @param applicationId
   * @param userIdentity
   * @param objectId
   * @param attributeName
   * @param attributeValue
   * @param privilege
   * @throws CSMInternalFault
   *	
   * @throws CSMTransactionFault
   *	
   */
  public boolean checkAttributeBasedPermission(long applicationId,java.lang.String userIdentity,java.lang.String objectId,java.lang.String attributeName,java.lang.String attributeValue,java.lang.String privilege) throws RemoteException, org.cagrid.gaards.csm.stubs.types.CSMInternalFault, org.cagrid.gaards.csm.stubs.types.CSMTransactionFault ;

  /**
   * This method allows an application admin to create a filter clause.
   *
   * @param filter
   * @throws CSMInternalFault
   *	
   * @throws AccessDeniedFault
   *	
   * @throws CSMTransactionFault
   *	
   */
  public org.cagrid.gaards.csm.bean.FilterClause createFilterClause(org.cagrid.gaards.csm.bean.FilterClause filter) throws RemoteException, org.cagrid.gaards.csm.stubs.types.CSMInternalFault, org.cagrid.gaards.csm.stubs.types.AccessDeniedFault, org.cagrid.gaards.csm.stubs.types.CSMTransactionFault ;

  /**
   * This method allows an application admin to modify a filter clause.
   *
   * @param filterClauseId
   * @param sqlForGroup
   * @param sqlForUser
   * @throws CSMInternalFault
   *	
   * @throws AccessDeniedFault
   *	
   * @throws CSMTransactionFault
   *	
   */
  public org.cagrid.gaards.csm.bean.FilterClause modifyFilterClause(long filterClauseId,java.lang.String sqlForGroup,java.lang.String sqlForUser) throws RemoteException, org.cagrid.gaards.csm.stubs.types.CSMInternalFault, org.cagrid.gaards.csm.stubs.types.AccessDeniedFault, org.cagrid.gaards.csm.stubs.types.CSMTransactionFault ;

  /**
   * This method allows an application admin to search for filter clauses for an application.
   *
   * @param criteria
   * @throws CSMInternalFault
   *	
   * @throws AccessDeniedFault
   *	
   * @throws CSMTransactionFault
   *	
   */
  public org.cagrid.gaards.csm.bean.FilterClause[] getFilterClauses(org.cagrid.gaards.csm.bean.FilterClauseSearchCriteria criteria) throws RemoteException, org.cagrid.gaards.csm.stubs.types.CSMInternalFault, org.cagrid.gaards.csm.stubs.types.AccessDeniedFault, org.cagrid.gaards.csm.stubs.types.CSMTransactionFault ;

  /**
   * This method allows an application admin to remove a filter clause.
   *
   * @param filterClauseId
   * @throws CSMInternalFault
   *	
   * @throws AccessDeniedFault
   *	
   */
  public void removeFilterClause(long filterClauseId) throws RemoteException, org.cagrid.gaards.csm.stubs.types.CSMInternalFault, org.cagrid.gaards.csm.stubs.types.AccessDeniedFault ;

  /**
   * creates a resource to be used to generate instance level security filters
   *
   * @param applicationID
   * @param applicationBeansJar
   * @param applicationORMJar
   * @param hibernateConfig
   * @throws HibernateSessionCreationFault
   *	
   */
  public org.cagrid.gaards.csm.filters.client.FilterCreatorClient createFilterCreator(long applicationID,byte[] applicationBeansJar,byte[] applicationORMJar,java.lang.String hibernateConfig) throws RemoteException, org.apache.axis.types.URI.MalformedURIException, org.cagrid.gaards.csm.stubs.types.HibernateSessionCreationFault ;

  /**
   * creates a FilterCreator reference by using a domain model to navigate the filter classes
   *
   * @param applicationID
   * @param domainModel
   */
  public org.cagrid.gaards.csm.filters.client.FilterCreatorClient createFilterCreatorFromDomainModel(long applicationID,gov.nih.nci.cagrid.metadata.dataservice.DomainModel domainModel) throws RemoteException, org.apache.axis.types.URI.MalformedURIException ;

}

