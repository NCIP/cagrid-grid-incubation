<!--
  Copyright The Ohio State University Research Foundation, The University of Chicago - 
Argonne National Laboratory, Emory University, SemanticBits LLC, and Ekagra Software Technologies Ltd.

  Distributed under the OSI-approved BSD 3-Clause License.
  See http://ncip.github.com/cagrid-core/LICENSE.txt for details.
-->
<?xml version="1.0"?>
<project name="cqlCore" basedir="." default="all" xmlns:ivy="antlib:org.apache.ivy.ant">

	<property environment="env" />
	<property file="${basedir}/project.properties" />
	<property name="globus.dir" value="${env.GLOBUS_LOCATION}" />
	<fail unless="env.GLOBUS_LOCATION" message="You must set the environment variable GLOBUS_LOCATION to the directory in which you have Globus Java WS-Core installed." />
	
	<property name="antfiles" location="${basedir}/../../antfiles" />
	
	<!-- build with debugging information -->
	<property name="java.debug" value="on" />
	<!-- enforce java 1.5 compliance at build time -->
	<property name="java.source" value="1.5" />

	<!-- Use caGrid 1.3 configuration-->
	<import file="${antfiles}/ivy/ivy-def-${repository.version}.xml" />

	<!-- Input Directories -->
	<property name="lib.dir" value="${basedir}/lib" />
	<property name="ext.lib.dir" value="${basedir}/ext/dependencies/jars"/>
	<property name="src.dir" value="${basedir}/src/java" />
	<property name="test.src.dir" location="${basedir}/test/src/java"/>
	<property name="antfiles.dir" location="${antfiles}" />
	<property name="antfiles.lib.dir" location="${antfiles}/lib" />
 
	<!-- Output Directories -->
	<property name="build.dir" location="${basedir}/build"/>
	<property name="build.beans.dest" location="${build.dir}/beans/classes"/>
	<property name="build.src.dest" location="${build.dir}/classes"/>
	<property name="build.test.dest" location="${build.dir}/test/classes"/>
	<property name="build.lib.dir" location="${build.dir}/lib" />
	<property name="test.logs.dir" location="${basedir}/test/logs"/>

	<!-- Output Information -->
	<property name="project.name" value="${ant.project.name}" />
	<property name="project.jar.prefix" value="${project.name}-" />
	<property name="project.jar.suffix" value="-${project.version}.jar" />
	
	<!-- jar names -->
	<property name="beans.jar.name" value="${project.jar.prefix}beans${project.jar.suffix}"/>
	<property name="core.jar.name" value="${project.jar.prefix}core${project.jar.suffix}" />
	<property name="tests.jar.name" value="${project.jar.prefix}test${project.jar.suffix}" />

	<!-- jar files -->
	<property name="beans.jar.file" value="${build.lib.dir}/${beans.jar.name}"/>
	<property name="core.jar.file" value="${build.lib.dir}/${core.jar.name}" />
	<property name="tests.jar.file" value="${build.lib.dir}/${tests.jar.name}" />

	<!-- build file for stub generation -->
	<property name="ant.build.stubs" location="${globus.dir}/share/globus_wsrf_tools/build-stubs.xml" />

	<!-- schemas and namespace mappings -->
	<property name="globus.schema.src" location="${globus.dir}/share/schema" />
	<property name="cql.1.0.schema.location" location="${basedir}/schemas/cql_1.0" />
	<property name="cql.2.0.schema.location" location="${basedir}/schemas/cql_2.0" />
	<property name="cql.1.0.stubs.src" location="${build.dir}/beans/cql_1.0/source" />
	<property name="cql.2.0.stubs.src" location="${build.dir}/beans/cql_2.0/source" />
	<property name="mapping.src" value="${basedir}/NStoPkg.properties" />
	
	<!-- import the test build file -->
	<import file="test/test.xml" />
	
	<!-- main build / run classpath -->
	<path id="base.classpath">
		<fileset dir="${lib.dir}">
			<include name="*.jar"/>
		</fileset>
		<fileset dir="${ext.lib.dir}">
			<include name="*.jar"/>
		</fileset>
		<fileset dir="${globus.dir}/lib">
			<include name="*.jar" />
			<exclude name="caGrid-*.jar" />
		</fileset>
	</path>
	
	<!-- Run Classpath -->
	<path id="run.classpath">
		<path refid="base.classpath" />
		<pathelement location="${build.beans.dest}" />
		<pathelement location="${build.src.dest}"/>
	</path>
	
	<!-- test classpath -->
	<path id="test.classpath">
		<path refid="run.classpath"/>
	</path>

	<!-- IVY targets -->
	<target name="define-ant-tasks" depends="init-ivy">
		<taskdef resource="net/sf/antcontrib/antlib.xml" loaderref="artifact">
			<classpath>
				<fileset dir="${antfiles.lib.dir}">
					<include name="ant.jar" />
				</fileset>
				<fileset dir="${antfiles.lib.dir}">
					<include name="ant-contrib*.jar" />
				</fileset>
			</classpath>
		</taskdef>
		<property name="defined.anttasks" value="true" />
	</target>

	<!--
	<target name="resolve" description="retrieve dependencies with ivy">
	        <ivy:retrieve />
		    <ivy:report todir="${build.lib.dir}"/>
	</target>
	-->
	
	
	<!-- sets up GT4 related variables -->
	<target name="setGlobus" if="env.GLOBUS_LOCATION">
		<!-- GT4 build files and directories-->
		<property name="ext.globus.dir" value="${env.GLOBUS_LOCATION}" />
		<property name="build.stubs" location="${ext.globus.dir}/share/globus_wsrf_tools/build-stubs.xml" />
		<property name="globus.schema.src" location="${ext.globus.dir}/share/schema" />
		<property name="build.packages" location="${ext.globus.dir}/share/globus_wsrf_common/build-packages.xml" />
		<!-- Copied from build.stubs file, as there is no way to "append" to the value in the remote file -->
		<property name="GT4.ns.excludes" value="-x http://docs.oasis-open.org/wsrf/2004/06/wsrf-WS-BaseFaults-1.2-draft-01.xsd -x http://docs.oasis-open.org/wsrf/2004/06/wsrf-WS-BaseFaults-1.2-draft-01.wsdl -x http://docs.oasis-open.org/wsrf/2004/06/wsrf-WS-ResourceLifetime-1.2-draft-01.xsd -x http://docs.oasis-open.org/wsrf/2004/06/wsrf-WS-ResourceLifetime-1.2-draft-01.wsdl -x http://docs.oasis-open.org/wsrf/2004/06/wsrf-WS-ResourceProperties-1.2-draft-01.xsd -x http://docs.oasis-open.org/wsrf/2004/06/wsrf-WS-ResourceProperties-1.2-draft-01.wsdl -x http://docs.oasis-open.org/wsrf/2004/06/wsrf-WS-ServiceGroup-1.2-draft-01.xsd -x http://docs.oasis-open.org/wsrf/2004/06/wsrf-WS-ServiceGroup-1.2-draft-01.wsdl -x http://docs.oasis-open.org/wsn/2004/06/wsn-WS-BaseNotification-1.2-draft-01.xsd -x http://docs.oasis-open.org/wsn/2004/06/wsn-WS-BaseNotification-1.2-draft-01.wsdl -x http://schemas.xmlsoap.org/ws/2004/04/trust -x http://schemas.xmlsoap.org/ws/2002/12/policy -x http://schemas.xmlsoap.org/ws/2002/07/utility -x http://schemas.xmlsoap.org/ws/2004/04/sc -x http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd -x http://www.w3.org/2000/09/xmldsig# -x http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd -x http://schemas.xmlsoap.org/ws/2004/09/enumeration" />
	</target>
	

	<!-- merge namespace mappings with globus -->
	<target name="mergeNsMappings" depends="init">
		<ant antfile="${build.stubs}" target="mergePackageMapping">
			<property name="mapping.src" location="NStoPkg.properties" />
			<property name="mapping.dst" location="${build.dir}/NStoPkg.properties" />
		</ant>
	</target>


	<!-- generates source stubs for the schema defined types -->
	<target name="beans" depends="init, setGlobus, mergeNsMappings">
		<property name="mapping.dst" value="${build.dir}/NStoPkg.properties" />
		<ant antfile="${ant.build.stubs}" target="mergePackageMapping" />
		<property name="mapping.file" value="${mapping.dst}" />
		<!-- generate beans for CQL 1.0 -->
		<ant antfile="${ant.build.stubs}" target="generateStubs">
			<property name="source.stubs.dir" location="${cql.1.0.schema.location}" />
			<property name="wsdl.file" value="CQL1.0-Beans.wsdl" />
			<property name="target.stubs.dir" location="${cql.1.0.stubs.src}" />
		</ant>
		<!-- generate beans for CQL 2.0 -->
		<ant antfile="${ant.build.stubs}" target="generateStubs">
			<property name="source.stubs.dir" location="${cql.2.0.schema.location}" />
			<property name="wsdl.file" value="CQL2.0-Beans.wsdl" />
			<property name="target.stubs.dir" location="${cql.2.0.stubs.src}" />
		</ant>
	</target>
	
		
	<!-- Create required directories -->
 	<target name="init">
    	<mkdir dir="${build.dir}"/>
 		<mkdir dir="${build.beans.dest}"/>
		<mkdir dir="${build.src.dest}" />
		<mkdir dir="${build.test.dest}" />
		<mkdir dir="${build.lib.dir}" />
		<mkdir dir="${test.logs.dir}" />
    </target>
	

	<target name="clean" description="Cleans the project">
		<delete dir="${build.dir}" failonerror="false" />
		<delete dir="${test.logs.dir}" failonerror="false" />
	</target>
	
	
	<!-- compiles the main source -->
	<target name="build" depends="init, define-ant-tasks, buildBeans" description="Compile the project">
		<javac srcdir="${src.dir}" destdir="${build.src.dest}" debug="${java.debug}" source="${java.source}">
			<include name="**/*.java"/>
			<classpath refid="base.classpath"/>
			<classpath>
				<pathelement location="${build.beans.dest}"/>
			</classpath>
		</javac>
	</target>
		

	<!-- compiles the tests -->
	<target name="buildTests" depends="build" description="Compile the project test cases">
		<javac srcdir="${test.src.dir}" destdir="${build.test.dest}" debug="${java.debug}" source="${java.source}">
			<include name="**/*.java"/>
			<classpath refid="test.classpath"/>
		</javac>
	</target>
	
	
	<target name="buildBeans" depends="beans" description="Compile the beans">
		<javac srcdir="${cql.1.0.stubs.src}" destdir="${build.beans.dest}" debug="${java.debug}" source="${java.source}">
			<include name="**/*.java"/>
			<classpath refid="base.classpath"/>
		</javac>
		<javac srcdir="${cql.2.0.stubs.src}" destdir="${build.beans.dest}" debug="${java.debug}" source="${java.source}">
			<include name="**/*.java"/>
			<classpath refid="base.classpath"/>
		</javac>
	</target>
	
	
	<!-- jars the common classes and source -->
	<target name="jar" depends="build" description="Builds and jars">
		<jar destfile="${core.jar.file}">
			<fileset dir="${build.src.dest}">
				<include name="**/*.class" />
			</fileset>
			<fileset dir="${src.dir}">
				<include name="**/*.java" />
			</fileset>
		</jar>
	</target>
	
	
	<!-- jars the test classes and source -->
	<target name="jarTests" depends="buildTests" description="Builds and jars tests">
		<jar destfile="${tests.jar.file}">
			<fileset dir="${build.test.dest}">
				<include name="**/*.class"/>
			</fileset>
			<fileset dir="${test.src.dir}">
				<include name="**/*.java"/>
			</fileset>
		</jar>
	</target>
	
	
	<!-- jars the beans and sources -->
	<target name="jarBeans" depends="buildBeans" description="Builds and jars beans">
		<jar destfile="${beans.jar.file}">
			<fileset dir="${build.beans.dest}">
				<include name="**/*"/>
			</fileset>
			<fileset dir="${cql.1.0.stubs.src}">
				<include name="**/*.java"/>
			</fileset>
			<fileset dir="${cql.2.0.stubs.src}">
				<include name="**/*.java"/>
			</fileset>
		</jar>
	</target>

    <target name="all" depends="jar, jarBeans, jarTests" description="Clean and build core and tests."/>
</project>
