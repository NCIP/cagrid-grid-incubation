<!-- ======================================================================= -->
<!-- caGrid I2B2 Query Processor build file                                  -->
<!-- ======================================================================= -->
<project name="caGrid-i2b2" default="all" basedir=".">
	<!-- Environment -->
	<property environment="env" />
	<property file="${basedir}/project.properties" />
	<property file="${basedir}/build.properties" />
	<property name="globus.dir" location="${env.GLOBUS_LOCATION}" />

	<!-- build with debugging information -->
	<property name="java.debug" value="on" />
	<!-- enforce java 1.5 compliance at build time -->
	<property name="java.source" value="1.5" />

	<!-- Information -->
	<property name="project.name" value="${ant.project.name}" />
	<property name="project.jar.prefix" value="${project.name}-" />
	<property name="project.jar.suffix" value="-${project.version}.jar" />

	<!-- build output dirs -->
	<property name="build.dir" location="build" />
	<property name="build.style.dest" location="${build.dir}/style/classes" />
	<property name="build.processor.dest" location="${build.dir}/style/processor" />
	<property name="build.beans.dest" location="${build.dir}/beans/classes" />
	<property name="build.jars.dir" location="build/lib" />

	<!-- jar names -->
	<property name="style.jar.name" value="${project.jar.prefix}style${project.jar.suffix}" />
	<property name="processor.jar.name" value="${project.jar.prefix}processor${project.jar.suffix}" />
	<!-- jar files -->
	<property name="style.jar.file" value="${build.jars.dir}/${style.jar.name}" />
	<property name="processor.jar.file" value="${build.jars.dir}/${processor.jar.name}" />

	<!-- source directories -->
	<property name="style.src.dir" location="${basedir}/src/java/style" />
	<property name="processor.src.dir" location="${basedir}/src/java/processor" />

	<!-- libraries -->
	<property name="lib.dir" location="${basedir}/lib" />
	<property name="ext.lib.dir" location="${basedir}/ext/dependencies/jars" />

	<!-- build file for stub generation -->
	<property name="ant.build.stubs" location="${globus.dir}/share/globus_wsrf_tools/build-stubs.xml" />

	<!-- style related stuff -->
	<property name="introduce.extensions.dir" location="../introduce/extensions" />
	<property name="style.document" location="${basedir}/style/style.xml" />
	<property name="style.dest.dir" location="${introduce.extensions.dir}/data/styles/i2b2" />

	<!-- =============================================================== -->
	<!-- The Build Classpath                                             -->
	<!-- =============================================================== -->
	<path id="build.classpath">
		<fileset dir="${lib.dir}">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${ext.lib.dir}">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${globus.dir}/lib">
			<include name="**/*.jar" />
			<exclude name="junit.jar" />
		</fileset>

		<pathelement location="${build.beans.dest}" />
	</path>


	<!-- sets up GT4 related variables -->
	<target name="setGlobus" if="env.GLOBUS_LOCATION">
		<!-- GT4 build files and directories-->
		<property name="ext.globus.dir" value="${env.GLOBUS_LOCATION}" />
		<property name="build.stubs" location="${ext.globus.dir}/share/globus_wsrf_tools/build-stubs.xml" />
		<property name="globus.schema.src" location="${ext.globus.dir}/share/schema" />
		<property name="build.packages" location="${ext.globus.dir}/share/globus_wsrf_common/build-packages.xml" />
		<!-- Copied from build.stubs file, as there is no way to "append" to the value in the remote file -->
		<property name="GT4.ns.excludes" value="-x http://docs.oasis-open.org/wsrf/2004/06/wsrf-WS-BaseFaults-1.2-draft-01.xsd -x http://docs.oasis-open.org/wsrf/2004/06/wsrf-WS-BaseFaults-1.2-draft-01.wsdl -x http://docs.oasis-open.org/wsrf/2004/06/wsrf-WS-ResourceLifetime-1.2-draft-01.xsd -x http://docs.oasis-open.org/wsrf/2004/06/wsrf-WS-ResourceLifetime-1.2-draft-01.wsdl -x http://docs.oasis-open.org/wsrf/2004/06/wsrf-WS-ResourceProperties-1.2-draft-01.xsd -x http://docs.oasis-open.org/wsrf/2004/06/wsrf-WS-ResourceProperties-1.2-draft-01.wsdl -x http://docs.oasis-open.org/wsrf/2004/06/wsrf-WS-ServiceGroup-1.2-draft-01.xsd -x http://docs.oasis-open.org/wsrf/2004/06/wsrf-WS-ServiceGroup-1.2-draft-01.wsdl -x http://docs.oasis-open.org/wsn/2004/06/wsn-WS-BaseNotification-1.2-draft-01.xsd -x http://docs.oasis-open.org/wsn/2004/06/wsn-WS-BaseNotification-1.2-draft-01.wsdl -x http://schemas.xmlsoap.org/ws/2004/04/trust -x http://schemas.xmlsoap.org/ws/2002/12/policy -x http://schemas.xmlsoap.org/ws/2002/07/utility -x http://schemas.xmlsoap.org/ws/2004/04/sc -x http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd -x http://www.w3.org/2000/09/xmldsig# -x http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd -x http://schemas.xmlsoap.org/ws/2004/09/enumeration" />
	</target>


	<!-- creates output directories -->
	<target name="init" depends="defineContribTasks">
		<mkdir dir="${build.dir}" />
		<mkdir dir="${build.jars.dir}" />
		<mkdir dir="${build.style.dest}" />
		<mkdir dir="${build.processor.dest}" />
	</target>


	<target name="defineContribTasks">
		<!-- using ant contrib for contidionals, looping, and runtarget -->
		<taskdef resource="net/sf/antcontrib/antlib.xml">
			<classpath>
				<fileset dir="${ext.lib.dir}">
					<include name="ant-contrib*.jar" />
				</fileset>
			</classpath>
		</taskdef>
	</target>


	<!-- compiles the style source code -->
	<target name="compileStyle" depends="init, compileProcessor">
		<javac srcdir="${style.src.dir}" destdir="${build.style.dest}" debug="${java.debug}" source="${java.source}">
			<classpath refid="build.classpath" />
			<classpath>
				<pathelement location="${build.processor.dest}" />
			</classpath>
			<include name="**/*.java" />
		</javac>
	</target>


	<!-- compiles the query processor source code -->
	<target name="compileProcessor" depends="init">
		<javac srcdir="${processor.src.dir}" destdir="${build.processor.dest}" debug="${java.debug}" source="${java.source}">
			<classpath refid="build.classpath" />
			<include name="**/*.java" />
		</javac>
	</target>

	<!-- jars the style -->
	<target name="jarStyle" depends="compileStyle" description="Builds the style jar file">
		<jar destfile="${style.jar.file}">
			<fileset dir="${build.style.dest}">
				<include name="**/*.class" />
			</fileset>
			<fileset dir="${style.src.dir}">
				<include name="**/*.java" />
			</fileset>
		</jar>
	</target>


	<!-- jars the processor -->
	<target name="jarProcessor" depends="compileProcessor" description="Builds the processor jar file">
		<jar destfile="${processor.jar.file}">
			<fileset dir="${build.processor.dest}">
				<include name="**/*.class" />
			</fileset>
			<fileset dir="${processor.src.dir}">
				<include name="**/*.java" />
			</fileset>
		</jar>
	</target>


	<!-- installs the service style -->
	<target name="installServiceStyle" depends="defineContribTasks" description="Installs the I2B2 data service style">
		<echo message="Installing Data Service Style I2B2" />
		<!-- some properties for the install -->
		<!-- make requisite directories -->
		<delete dir="${style.dest.dir}" />
		<mkdir dir="${style.dest.dir}" />
		<mkdir dir="${style.dest.dir}/lib" />
		<!-- copy in the style.xml file -->
		<copy file="${style.document}" todir="${style.dest.dir}" />
		<!-- copy in the style's jar file -->
		<copy todir="${style.dest.dir}/lib">
			<!-- the style itself and query processor -->
			<fileset dir="${build.jars.dir}">
				<include name="*.jar" />
			</fileset>s
			<!-- copy the dependencies -->
			<fileset dir="${lib.dir}">
				<include name="*.jar" />
			</fileset>
		</copy>
	</target>


	<!-- allows style to be installed by top-level build -->
	<target name="installIntroduceExtensions" depends="installServiceStyle" />


	<!-- removes all build output -->
	<target name="clean">
		<delete dir="${build.dir}" />
	</target>


	<!-- build and jar everything -->
	<target name="all" depends="jarProcessor, jarStyle" description="Builds and jars all the classes in the project" />
</project>
