<!-- ======================================================================= -->
<!-- caGrid 1.3 caCORE SDK DataType Extensions / Styles build file                  -->
<!-- ======================================================================= -->
<project name="caGrid-mappingExtensions" default="all" basedir=".">
	<!-- Environment -->
	<property environment="env" />
	<property file="${basedir}/project.properties" />
	<property file="${basedir}/build.properties" />
	<property name="globus.dir" location="${env.GLOBUS_LOCATION}" />

	<!-- build with debugging information -->
	<property name="java.debug" value="on" />
	<!-- enforce java 1.5 compliance at build time -->
	<property name="java.source" value="1.5" />

	<!-- Information -->
	<property name="project.name" value="${ant.project.name}" />
	<property name="project.jar.prefix" value="${project.name}-" />
	<property name="project.jar.suffix" value="${project.version}.jar" />

	<!-- build output dirs -->
	<property name="build.dir" location="build" />
	<property name="build.dest" location="${build.dir}/classes" />
	<property name="build.jars.dir" location="${build.dir}/lib" />

	<!-- jar names -->
	<property name="jar.name" value="${project.jar.prefix}${project.jar.suffix}" />

	<!-- jar files -->
	<property name="jar.file" value="${build.jars.dir}/${jar.name}" />

	<!-- extension -->
	<property name="extension.dir" location="${basedir}/extension" />
	<property name="extension.description.file" value="${extension.dir}/extension.xml" />
	<property name="introduce.extensions.dir" location="${cagrid.home}/projects/introduce/extensions" />
	<property name="ext.schema.dir" location="${basedir}/ext/dependencies/xsd" />

	<!-- source directories -->
	<property name="src.dir" location="${basedir}/src/java" />

	<!-- libraries -->
	<property name="lib.dir" location="${basedir}/lib" />
	<property name="ext.dir" location="${basedir}/ext"/>
	<property name="ext.dependencies.dir" location="${basedir}/ext/dependencies"/>
	<property name="ext.lib.dir" location="${ext.dependencies.dir}/jars" />
	<property name="ext.test.lib.dir" location="${basedir}/ext/dependencies/test/jars" />

	<!-- =============================================================== -->
	<!-- Classpaths                                                      -->
	<!-- =============================================================== -->
	<path id="base.classpath">
		<fileset dir="${ext.lib.dir}">
			<include name="*.jar" />
		</fileset>
		<fileset dir="${globus.dir}/lib">
			<include name="*.jar" />
            <exclude name="junit.jar"/>
		</fileset>
	</path>
	
	<path id="test.classpath">
		<path refid="base.classpath" />
		<fileset dir="${ext.test.lib.dir}">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${build.jars.dir}">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${globus.dir}/lib">
			<include name="**/*.jar" />
            <exclude name="junit.jar"/>
		</fileset>
	</path>

	<!-- creates output directories -->
	<target name="init" depends="defineContribTasks">
		<mkdir dir="${build.dir}" />
		<mkdir dir="${build.jars.dir}" />
		<mkdir dir="${build.dest}" />
	</target>

	<target name="defineContribTasks">
		<!-- using ant contrib for contidionals, looping, and runtarget -->
		<taskdef resource="net/sf/antcontrib/antlib.xml">
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="ant-contrib*.jar" />
				</fileset>
			</classpath>
		</taskdef>
	</target>

	<!-- compiles the classes -->
	<target name="compile" depends="init">
		<javac srcdir="${src.dir}" destdir="${build.dest}" debug="${java.debug}" source="${java.source}">
			<classpath>
				<path refid="base.classpath" />
			</classpath>
		</javac>
	</target>

	<!-- jars the common classes -->
	<target name="jar" depends="compile" description="Builds and jars the classes">
		<jar destfile="${jar.file}">
			<fileset dir="${build.dest}">
				<include name="**/*.class" />
			</fileset>
			<fileset dir="${src.dir}">
				<include name="**/*.java" />
				<include name="**/*.xml" />
			</fileset>
			<fileset dir="${basedir}/src">
				<include name="resources/**/*" />
			</fileset>
		</jar>
	</target>

	<!-- removes all build output -->
	<target name="clean">
		<delete dir="tmp" />
		<delete dir="${build.dir}" />
	</target>
		
	<!-- Build and install extensions for introduce -->
	<target name="installIntroduceExtensions" if="introduce.dir" depends="defineContribTasks" description="Builds and installs the Data Services extensions into Introduce.">
		<delete dir="${introduce.dir}/extensions/mapping"/>
		<echo message="Deleted mapping extensions dir (${introduce.dir}/extensions/mapping)"/>
		<mkdir dir="${introduce.dir}/extensions/mapping" />
		<echo message="Created mapping extrensions dir (${introduce.dir}/extensions/mapping)"/>
		<mkdir dir="${introduce.dir}/extensions/mapping/lib" />
		<!-- libraries -->
		<copy todir="${introduce.dir}/extensions/lib">
			<fileset dir="${ext.lib.dir}">
				<include name="*.jar" />
				<exclude name="*Introduce*.jar" />
			</fileset>
		</copy>
		<!-- the extension definition -->
		<copy todir="${introduce.dir}/extensions/mapping">
			<fileset dir="${extension.dir}">
				<include name="extension.xml"/>
			</fileset>
		</copy>
		<copy todir="${introduce.dir}/extensions/lib" file="${jar.file}" />
	</target>

	
	<!-- build and jar everything -->
	<target name="all" depends="jar" description="Builds and jars all the classes in the project" />
</project>
