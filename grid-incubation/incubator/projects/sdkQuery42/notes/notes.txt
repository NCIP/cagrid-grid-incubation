Downloading and building the SDK example project:


http://gforge.nci.nih.gov/svnroot/cacoresdk/tags/CACORESDK_42_QA_10302009. Unless we find a show stopper, we will not change anything in this codebase except the ivysettings.xml to point to cagrid 1.3.0.2 release repository. I will send this tag to the QA team as well.

With this tag, you can use following commands 

-	ant build-system : this target creates output directory without downloading containers (should execute in about 2 minutes). You should be using this target for your build.
-	ant deploy-system: this target downloads jboss and tomcat. It further proceeds with the deployment 
-	ant deploy:local:install: this target builds and deploys the complete system


* previous tag here: http://gforge.nci.nih.gov/svnroot/cacoresdk/tags/CACORESDK_42_QA_10262009
* old: http://gforge.nci.nih.gov/svnroot/cacoresdk/tags/CACORESDK_42_QA_10132009
* ancient: http://gforge.nci.nih.gov/svnroot/cacoresdk/tags/CACORESDK_42_caGRID1302

1	cd sdk-toolkit\example-project\build
2	Modify codegen.properties and install.properties
	* install.properties has DB_* properties you need to set, and container type
	* If you want to SDK to set up the database, comment the exclude.database property in install.properties
3	Execute the build
	* deploy:local:install
		** Builds everything, creates a distribution, installs a container for you
	* deploy:local:install:re-configure
		** Re-configures your container if you made changes in install.properties and redeploys
	* dist deploy:local:install:re-configure
		** Does what the deploy:local:install target does, but doesn't install a container
	* build-system
		** Works as expected, builds SDK, builds your project, lays out artifacts in dist dir
4	Output we depend on goes to sdk-toolkit\example-project\target\dist\exploded\output\example\package 

The build script will download the container no matter what. The BDA team at NCICB has come up with this build methodology and all projects at NCICB is required to follow it. The reasoning behind downloading the container is that someone may want to install the already built system. In that case everything that’s needed to install the app should be already available in the target/dist folder. The end user is given the zip of the target/dist folder. The end user has an option at the time of final installation whether to install the container or not. If he chooses to install then it will be used from the previously downloaded version in the dist/exploded folder.