<!--
  Copyright The Ohio State University Research Foundation, The University of Chicago - 
Argonne National Laboratory, Emory University, SemanticBits LLC, and Ekagra Software Technologies Ltd.

  Distributed under the OSI-approved BSD 3-Clause License.
  See http://ncip.github.com/cagrid-core/LICENSE.txt for details.
-->
<?xml version="1.0" encoding="utf-8" ?>
<project name="Interfaces Extension for Introduce" default="compile" basedir=".">
  <description>
  </description>

  <property environment="env" />
  <property name="project.version" value="1.1" />

<!--
  <property name="ivy-shared-targets.basedir" value="${env.CAGRID_LOCATION}/antfiles/ivy" />
-->

<!--
  <import file="${basedir}/dependencies-build.xml" /> 
-->

  <property name="src.dir" value="${basedir}/src/interfaces/extension" />
  <property name="client.src.dir" value="${basedir}/src/interfaces/client" />
  <property name="spring.src.dir" value="${basedir}/src/spring/extension" />
  <property name="spring.client.src.dir" value="${basedir}/src/spring/client" />
  <property name="lib.dir" value="${basedir}/lib" />
  <property name="build.dir" value="${basedir}/build" />
  <property name="dist.dir" value="${build.dir}/dist" />
  <property name="jars.dir" value="${build.dir}/jars" />
  <property name="javadoc.dir" value="${build.dir}/javadoc" />
  <property name="classes.dir" value="${build.dir}/classes/interfaces" />
  <property name="spring.classes.dir" value="${build.dir}/classes/spring" />
  <property name="test.dir" value="${basedir}/test" />
  <property name="resource.client.dir" value="${basedir}/resources/interfaces/client" />
  <property name="spring.resource.client.dir" value="${basedir}/resources/spring/client" />
  <property name="extension.xml" value="${basedir}/conf/interfaces/extension.xml" />
  <property name="extension.name.short" value="interfacesExtension" />
  <property name="spring.extension.xml" value="${basedir}/conf/spring/extension.xml" />
  <property name="spring.extension.name.short" value="springExtension" />

  <property name="build.jar" value="${jars.dir}/${extension.name.short}-${project.version}.jar" />
  <property name="build.client.jar" value="${jars.dir}/${extension.name.short}-client-${project.version}.jar" />
  <property name="spring.build.jar" value="${jars.dir}/${spring.extension.name.short}-${project.version}.jar" />
  <property name="spring.build.client.jar" value="${jars.dir}/${spring.extension.name.short}-client-${project.version}.jar" />

  <!-- Introduce properties -->
  <property name="introduce.dir" value="${env.CAGRID_LOCATION}/projects/introduce" />
  <property name="introduce.extensions.dir" value="${introduce.dir}/extensions" />
  <property name="introduce.skeleton.lib.dir" value="${introduce.dir}/ext/skeleton/interfaces/lib" />
  <property name="spring.introduce.skeleton.lib.dir" value="${introduce.dir}/ext/skeleton/spring/lib" />

  <!-- Jet -->
  <property name="jet.template.dir" value="${basedir}/templates" />
  <property name="jet.lib.dir" value="${jet.template.dir}/lib" />
  <property name="jet.interfaces.src.dir" value="${jet.template.dir}/src/interfaces" />
  <property name="jet.interfaces.build.dir" value="${build.dir}/jet/interfaces" />
  <property name="jet.spring.src.dir" value="${jet.template.dir}/src/spring" />
  <property name="jet.spring.build.dir" value="${build.dir}/jet/spring" />

  <!-- Jars required by the service  -->
  <property name="qdox.jar" value="${lib.dir}/qdox-1.7-20070527.154641-2.jar" />
  <property name="collections.jar" value="${lib.dir}/google-collect-snapshot-20071022.jar" />
  <property name="spring.jar" value="${lib.dir}/spring.jar" />
  <!-- caGrid version of Spring is too old -->
  <property name="cglib.jar" value="${lib.dir}/cglib-nodep-2.1_3.jar" />

  <!-- testing stuff -->
  <property name="test.dir" location="${basedir}/test" />
  <property name="test.src.dir" location="${test.dir}/src" />
  <property name="test.classes.dir" location="${build.dir}/test_classes" />
  <property name="test.lib.dir" location="${test.dir}/lib" />
  <property name="test.logs.dir" location="${test.dir}/logs" />

  <import file="${test.dir}/test.xml" />

  <!-- Classpaths -->
  <target name="checkGlobus" depends="setGlobus">
    <condition property="globus.not.found">
      <or>
        <not>
          <isset property="ext.globus.dir" />
        </not>
        <equals arg1="${ext.globus.dir}" arg2="" />
      </or>
    </condition>
    <fail message="Globus installation is not set in either GLOBUS_LOCATION or ext.globus.dir" if="globus.not.found" />
    <echo message="Globus: ${ext.globus.dir}" />
  </target>

  <target name="setGlobus" if="env.GLOBUS_LOCATION">
    <property name="ext.globus.dir" value="${env.GLOBUS_LOCATION}" />
    <property name="build.stubs" location="${ext.globus.dir}/share/globus_wsrf_tools/build-stubs.xml" />
    <property name="schema.src" location="${ext.globus.dir}/share/schema" />
    <property name="build.packages" location="${ext.globus.dir}/share/globus_wsrf_common/build-packages.xml" />
    <!-- Copied from build.stubs file, as there is no way to "append" to the value in the remote file -->
    <property name="GT4.ns.excludes" value="-x http://docs.oasis-open.org/wsrf/2004/06/wsrf-WS-BaseFaults-1.2-draft-01.xsd -x http://docs.oasis-open.org/wsrf/2004/06/wsrf-WS-BaseFaults-1.2-draft-01.wsdl -x http://docs.oasis-open.org/wsrf/2004/06/wsrf-WS-ResourceLifetime-1.2-draft-01.xsd -x http://docs.oasis-open.org/wsrf/2004/06/wsrf-WS-ResourceLifetime-1.2-draft-01.wsdl -x http://docs.oasis-open.org/wsrf/2004/06/wsrf-WS-ResourceProperties-1.2-draft-01.xsd -x http://docs.oasis-open.org/wsrf/2004/06/wsrf-WS-ResourceProperties-1.2-draft-01.wsdl -x http://docs.oasis-open.org/wsrf/2004/06/wsrf-WS-ServiceGroup-1.2-draft-01.xsd -x http://docs.oasis-open.org/wsrf/2004/06/wsrf-WS-ServiceGroup-1.2-draft-01.wsdl -x http://docs.oasis-open.org/wsn/2004/06/wsn-WS-BaseNotification-1.2-draft-01.xsd -x http://docs.oasis-open.org/wsn/2004/06/wsn-WS-BaseNotification-1.2-draft-01.wsdl -x http://schemas.xmlsoap.org/ws/2004/04/trust -x http://schemas.xmlsoap.org/ws/2002/12/policy -x http://schemas.xmlsoap.org/ws/2002/07/utility -x http://schemas.xmlsoap.org/ws/2004/04/sc -x http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd -x http://www.w3.org/2000/09/xmldsig# -x http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd -x http://schemas.xmlsoap.org/ws/2004/09/enumeration" />
  </target>

  
  <target name="defineClasspaths" depends="checkGlobus">
    <path id="build.classpath">
    <!-- ivy places dependent jars in the "ext" directory -->
      <fileset dir="ext">
        <include name="**/*.jar" />
      </fileset>
      <fileset dir="${lib.dir}">
        <include name="**/*.jar" />
      </fileset>
      <fileset dir="${ext.globus.dir}/lib">
        <include name="**/*.jar" />
      </fileset>
      
    </path>

    <path id="spring.build.classpath">
      <path refid="build.classpath" />
      <pathelement path="${classes.dir}" />
    </path>

    <path id="test.classpath">
      <pathelement path="${classes.dir}" />
      <pathelement path="${spring.classes.dir}" />
      <pathelement path="${test.dir}/resources" />
      <fileset dir="${test.lib.dir}">
        <include name="**/*.jar" />
      </fileset>
    <!-- ivy places dependent jars in the "ext" directory -->
      <fileset dir="ext">
        <include name="**/*.jar" />
      </fileset>
      <fileset dir="${lib.dir}">
        <include name="**/*.jar" />
      </fileset>
      <fileset dir="${ext.globus.dir}/lib">
        <include name="**/*.jar" />
      </fileset>
    </path>

    <path id="jet.classpath">
      <fileset dir="${jet.lib.dir}">
        <include name="**/*.jar" />
      </fileset>
    </path>
  </target>
  
  <taskdef name="jetc" classname="ch.paranor.epla.structure.JETCTask" classpathref="jet.classpath" />

  <target name="prepare" depends="checkGlobus" >
    <mkdir dir="${build.dir}" />
    <mkdir dir="${dist.dir}" />
    <mkdir dir="${jars.dir}" />
    <mkdir dir="${classes.dir}" />
    <mkdir dir="${jet.interfaces.build.dir}" />
  </target>

  <target name="prepare-spring" depends="prepare">
    <mkdir dir="${spring.classes.dir}" />
    <mkdir dir="${jet.spring.build.dir}" />
  </target>

  <target name="clean">
    <delete dir="${classes.dir}" />
    <delete dir="${build.jar}" />
    <delete dir="${build.dir}" />
    <delete dir="${basedir}/ext" />
  </target>

  <target name="compile-templates" depends="compile-templates-spring,compile-templates-interfaces" description="Compiles Jet Templates" />

  <target name="compile-templates-spring" depends="prepare-spring" description="Compiles Jet Templates for Spring Extension">
    <jetc destDir="${jet.spring.build.dir}">
      <fileset dir="${jet.spring.src.dir}" includes="**/*.javajet" />
    </jetc>
  </target>

  <target name="compile-templates-interfaces" depends="prepare" description="Compiles Jet Templates for Interfaces Extension">
    <jetc destDir="${jet.interfaces.build.dir}">
      <fileset dir="${jet.interfaces.src.dir}" includes="**/*.javajet" />
    </jetc>
  </target>

  <target name="compile-interfaces" depends="prepare,compile-templates-interfaces">
    <javac destdir="${classes.dir}" classpathref="build.classpath" debug="true" debuglevel="lines,vars,source">
      <src path="${src.dir}" />
      <src path="${client.src.dir}" />
      <src path="${jet.interfaces.build.dir}" />
    </javac>
  </target>

  <target name="compile-spring" depends="prepare-spring,compile-templates-spring">
    <javac destdir="${spring.classes.dir}" classpathref="spring.build.classpath" debug="true" debuglevel="lines,vars,source">
      <src path="${spring.src.dir}" />
      <src path="${spring.client.src.dir}" />
      <src path="${jet.spring.build.dir}" />
    </javac>
  </target>

  <target name="compile" depends="compile-interfaces,compile-spring" />


  <!-- =================================================================== -->
  <!-- Builds Code Docuementation                                          -->
  <!-- =================================================================== -->
  <target name="javadoc" depends="compile" description="Creates the API documentation.">
    <javadoc packagenames="*" destdir="${javadoc.dir}" author="true" use="true" windowtitle="${project.name} API">
      <sourcepath>
        <pathelement path="${src.dir}" />
        <pathelement path="${client.src.dir}" />
        <pathelement path="${jet.interfaces.build.dir}" />
        <pathelement path="${jet.spring.build.dir}" />
        <pathelement path="${spring.src.dir}" />
        <pathelement path="${spring.client.src.dir}" />
        <pathelement path="${jet.spring.build.dir}" />
      </sourcepath>
      <classpath>
        <path refid="build.classpath" />
        <path refid="spring.build.classpath" />
      </classpath>
    </javadoc>
  </target>

  <!-- =============================================================== -->
  <!-- Compiles the test source code                                        -->
  <!-- =============================================================== -->
  <target name="compile-tests" depends="prepare,compile" description="compiles.">
    <mkdir dir="${test.classes.dir}" />
    <javac srcdir="${test.src.dir}" destdir="${test.classes.dir}" deprecation="off" optimize="off" debug="true" debuglevel="lines,vars,source">
      <classpath refid="test.classpath" />
    </javac>
  </target>

  <target name="jar" description="Builds a jar file" depends="compile-interfaces">
    <jar destfile="${build.jar}" basedir="${classes.dir}" excludes="**/client/**" />
  </target>

  <target name="jar-client" description="Builds jar for client" depends="compile-interfaces">
    <jar destfile="${build.client.jar}" basedir="${classes.dir}" includes="**/client/**" >
      <fileset dir="${resource.client.dir}" includes="**/*" />
    </jar>
  </target>

  <target name="jar-spring" depends="compile-spring">
    <jar destfile="${spring.build.jar}" basedir="${spring.classes.dir}" excludes="**/client/**" />
  </target>

  <target name="jar-spring-client" depends="compile-spring">
    <jar destfile="${spring.build.client.jar}" basedir="${spring.classes.dir}" includes="**/client/**">
      <fileset dir="${spring.resource.client.dir}" includes="**/*" />
      <metainf dir="${basedir}/conf">
        <include name="spring.*" />
      </metainf>
    </jar>
  </target>

  <target name="jars" depends="jar,jar-client,jar-spring,jar-spring-client" />

  <target name="deploy-interfaces" description="Deploys Interfaces Introduce Extension" depends="jar,jar-client">
    <copy todir="${introduce.extensions.dir}/lib">
      <fileset file="${build.jar}" />
      <fileset file="${build.client.jar}" />
      <fileset file="${qdox.jar}" />
      <fileset file="${collections.jar}" />
    </copy>
    <mkdir dir="${introduce.extensions.dir}/${extension.name.short}" />
    <copy todir="${introduce.extensions.dir}/${extension.name.short}">
      <fileset file="${extension.xml}" />
    </copy>
    <mkdir dir="${introduce.skeleton.lib.dir}" />
    <copy todir="${introduce.skeleton.lib.dir}">
      <fileset file="${build.client.jar}" />
    </copy>
  </target>

  <target name="deploy-spring" description="Deploys Spring Introduce Extension" depends="deploy-interfaces,jar-spring,jar-spring-client">
    <copy todir="${introduce.extensions.dir}/lib">
      <fileset file="${spring.build.jar}" />
      <fileset file="${spring.build.client.jar}" />
      <fileset file="${spring.jar}" />
    </copy>
    <mkdir dir="${introduce.extensions.dir}/${spring.extension.name.short}" />
    <copy todir="${introduce.extensions.dir}/${spring.extension.name.short}">
      <fileset file="${spring.extension.xml}" />
    </copy>
    <mkdir dir="${spring.introduce.skeleton.lib.dir}" />
    <copy todir="${spring.introduce.skeleton.lib.dir}">
      <fileset file="${spring.build.client.jar}" />
      <fileset file="${spring.jar}" />
      <fileset file="${cglib.jar}" />
    </copy>
  </target>
  
  <target name="all" depends="jars" />
  
  <target name="installIntroduceExtensions" depends="deploy-interfaces,deploy-spring" />

  <target name="dist" depends="prepare">
    <zip destfile="${dist.dir}/interfaces-${project.version}.zip" basedir="${basedir}" excludes="ext/**, build/**, bin/**, .cache/**" />
  </target>
</project>
