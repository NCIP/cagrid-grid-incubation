package org.cagrid.tide.replica.context.service.globus.resource;

import org.cagrid.tide.replica.context.common.TideReplicaManagerContextConstants;
import org.cagrid.tide.replica.context.stubs.TideReplicaManagerContextResourceProperties;

import org.globus.wsrf.ResourceException;
import org.globus.wsrf.ResourceKey;
import org.globus.wsrf.impl.ResourceHomeImpl;
import org.globus.wsrf.impl.SimpleResourceKey;
import org.apache.axis.message.addressing.EndpointReferenceType;
import org.apache.axis.MessageContext;
import org.globus.wsrf.ResourceContext;
import org.globus.wsrf.utils.AddressingUtils;
import org.apache.axis.components.uuid.UUIDGen;
import org.apache.axis.components.uuid.UUIDGenFactory;

/**
 * DO NOT EDIT: This class is autogenerated! This class implements the resource
 * home for the resource type represented by this service.
 * 
 * @created by Introduce Toolkit version 1.2
 */
public class TideReplicaManagerContextResourceHome extends ResourceHomeImpl {
	private static final UUIDGen UUIDGEN = UUIDGenFactory.getUUIDGen();

	/**
	 * Creates a new Resource, adds it to the list of resources managed by this
	 * resource home, and returns the key to the resource.
	 */
	public ResourceKey createResource(String tideID) throws Exception {
		// Create a resource and initialize it
		TideReplicaManagerContextResource resource = (TideReplicaManagerContextResource) createNewInstance();
		// Create the resource properties bean so that the resource can use it
		// to hold the resource property values
		TideReplicaManagerContextResourceProperties props = new TideReplicaManagerContextResourceProperties();

		// Get a unique id for the resource
		Object id = tideID;

		// Create the resource key set it on the resource
		// this key is used for index service registration
		ResourceKey key = new SimpleResourceKey(getKeyTypeName(), id);
		resource.setResourceKey(key);

		resource.initialize(props,
				TideReplicaManagerContextConstants.RESOURCE_PROPERTY_SET, id);

		// Add the resource to the list of resources in this home
		add(key, resource);
		return key;
	}

	/**
	 * Given the key of a resource managed by this resource home, a type
	 * resource will be returned.
	 */
	public TideReplicaManagerContextResource getResource(String tideID)
			throws ResourceException {
		// Get a unique id for the resource
		Object id = tideID;

		// Create the resource key set it on the resource
		// this key is used for index service registration
		ResourceKey key = new SimpleResourceKey(getKeyTypeName(), id);
		return getResource(key);
	}

	
	public org.cagrid.tide.replica.context.stubs.types.TideReplicaManagerContextReference getResourceReference(
			String tideID) throws Exception {
		Object id = tideID;
		ResourceKey key = new SimpleResourceKey(getKeyTypeName(), id);
		return getResourceReference(key);

	}

	/**
	 * Take a resource key managed by this resource, locates the resource, and
	 * created a typed EPR for the resource.
	 */
	public org.cagrid.tide.replica.context.stubs.types.TideReplicaManagerContextReference getResourceReference(
			ResourceKey key) throws Exception {
		MessageContext ctx = MessageContext.getCurrentContext();
		String transportURL = (String) ctx
				.getProperty(org.apache.axis.MessageContext.TRANS_URL);
		transportURL = transportURL.substring(0,
				transportURL.lastIndexOf('/') + 1);
		transportURL += "TideReplicaManagerContext";
		EndpointReferenceType epr = AddressingUtils.createEndpointReference(
				transportURL, key);
		org.cagrid.tide.replica.context.stubs.types.TideReplicaManagerContextReference ref = new org.cagrid.tide.replica.context.stubs.types.TideReplicaManagerContextReference();
		ref.setEndpointReference(epr);
		return ref;
	}

	/**
	 * Given the key of a resource managed by this resource home, a type
	 * resource will be returned.
	 */
	public TideReplicaManagerContextResource getResource(ResourceKey key)
			throws ResourceException {
		TideReplicaManagerContextResource thisResource = (TideReplicaManagerContextResource) find(key);
		return thisResource;
	}

	/**
	 * Get the resouce that is being addressed in this current context
	 */
	public TideReplicaManagerContextResource getAddressedResource()
			throws Exception {
		TideReplicaManagerContextResource thisResource;
		thisResource = (TideReplicaManagerContextResource) ResourceContext
				.getResourceContext().getResource();
		return thisResource;
	}

}