package org.cagrid.monitor.service.globus;

import org.cagrid.monitor.service.MonitoringServiceImpl;

import java.rmi.RemoteException;

/** 
 * DO NOT EDIT:  This class is autogenerated!
 *
 * This class implements each method in the portType of the service.  Each method call represented
 * in the port type will be then mapped into the unwrapped implementation which the user provides
 * in the MonitoringServiceImpl class.  This class handles the boxing and unboxing of each method call
 * so that it can be correclty mapped in the unboxed interface that the developer has designed and 
 * has implemented.  Authorization callbacks are automatically made for each method based
 * on each methods authorization requirements.
 * 
 * @created by Introduce Toolkit version 1.3
 * 
 */
public class MonitoringServiceProviderImpl{
	
	MonitoringServiceImpl impl;
	
	public MonitoringServiceProviderImpl() throws RemoteException {
		impl = new MonitoringServiceImpl();
	}
	

    public org.cagrid.monitor.stubs.AddServiceMetadataResponse addServiceMetadata(org.cagrid.monitor.stubs.AddServiceMetadataRequest params) throws RemoteException {
    org.cagrid.monitor.stubs.AddServiceMetadataResponse boxedResult = new org.cagrid.monitor.stubs.AddServiceMetadataResponse();
    impl.addServiceMetadata(params.getServiceMetadata().getServiceMetadata());
    return boxedResult;
  }

    public org.cagrid.monitor.stubs.StartMonitoringResponse startMonitoring(org.cagrid.monitor.stubs.StartMonitoringRequest params) throws RemoteException {
    org.cagrid.monitor.stubs.StartMonitoringResponse boxedResult = new org.cagrid.monitor.stubs.StartMonitoringResponse();
    impl.startMonitoring();
    return boxedResult;
  }

    public org.cagrid.monitor.stubs.StopMonitoringResponse stopMonitoring(org.cagrid.monitor.stubs.StopMonitoringRequest params) throws RemoteException {
    org.cagrid.monitor.stubs.StopMonitoringResponse boxedResult = new org.cagrid.monitor.stubs.StopMonitoringResponse();
    impl.stopMonitoring();
    return boxedResult;
  }

    public org.cagrid.monitor.stubs.AddServiceResponse addService(org.cagrid.monitor.stubs.AddServiceRequest params) throws RemoteException, org.cagrid.monitor.stubs.types.MonitorFault {
    org.cagrid.monitor.stubs.AddServiceResponse boxedResult = new org.cagrid.monitor.stubs.AddServiceResponse();
    boxedResult.setResponse(impl.addService(params.getService().getService()));
    return boxedResult;
  }

    public org.cagrid.monitor.stubs.AddTaskResponse addTask(org.cagrid.monitor.stubs.AddTaskRequest params) throws RemoteException, org.cagrid.monitor.stubs.types.MonitorFault {
    org.cagrid.monitor.stubs.AddTaskResponse boxedResult = new org.cagrid.monitor.stubs.AddTaskResponse();
    boxedResult.setResponse(impl.addTask(params.getTask().getTask()));
    return boxedResult;
  }

    public org.cagrid.monitor.stubs.AddEventResponse addEvent(org.cagrid.monitor.stubs.AddEventRequest params) throws RemoteException, org.cagrid.monitor.stubs.types.MonitorFault {
    org.cagrid.monitor.stubs.AddEventResponse boxedResult = new org.cagrid.monitor.stubs.AddEventResponse();
    boxedResult.setResponse(impl.addEvent(params.getEvent().getEvent()));
    return boxedResult;
  }

    public org.cagrid.monitor.stubs.GetEventHistoryResponse getEventHistory(org.cagrid.monitor.stubs.GetEventHistoryRequest params) throws RemoteException, org.cagrid.monitor.stubs.types.MonitorFault {
    org.cagrid.monitor.stubs.GetEventHistoryResponse boxedResult = new org.cagrid.monitor.stubs.GetEventHistoryResponse();
    boxedResult.setJob(impl.getEventHistory(params.getEvent().getEvent()));
    return boxedResult;
  }

}
