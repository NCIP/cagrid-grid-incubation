package org.cagrid.tide.context.service.globus.resource;

import java.rmi.RemoteException;

import org.cagrid.tide.context.common.TideContextConstants;
import org.cagrid.tide.context.stubs.TideContextResourceProperties;
import org.cagrid.tide.descriptor.TideDescriptor;

import org.globus.wsrf.ResourceException;
import org.globus.wsrf.ResourceKey;
import org.globus.wsrf.impl.ResourceHomeImpl;
import org.globus.wsrf.impl.SimpleResourceKey;
import org.apache.axis.message.addressing.EndpointReferenceType;
import org.apache.axis.MessageContext;
import org.globus.wsrf.ResourceContext;
import org.globus.wsrf.utils.AddressingUtils;
import org.apache.axis.components.uuid.UUIDGen;
import org.apache.axis.components.uuid.UUIDGenFactory;


/**
 * DO NOT EDIT: This class is autogenerated! This class implements the resource
 * home for the resource type represented by this service.
 * 
 * @created by Introduce Toolkit version 1.2
 */
public class TideContextResourceHome extends ResourceHomeImpl {
    private static final UUIDGen UUIDGEN = UUIDGenFactory.getUUIDGen();


    /**
     * Creates a new Resource, adds it to the list of resources managed by this
     * resource home, and returns the key to the resource.
     */
    public ResourceKey createResource(String id) throws Exception {
        // Create a resource and initialize it
        TideContextResource resource = (TideContextResource) createNewInstance();
        // Create the resource properties bean so that the resource can use it
        // to hold the resource property values
        TideContextResourceProperties props = new TideContextResourceProperties();

        // Create the resource key set it on the resource
        // this key is used for index service registration
        ResourceKey key = new SimpleResourceKey(getKeyTypeName(), id);
        resource.setResourceKey(key);

        resource.initialize(props, TideContextConstants.RESOURCE_PROPERTY_SET, id);

        // Add the resource to the list of resources in this home
        add(key, resource);
        return key;
    }


    public org.cagrid.tide.context.stubs.types.TideContextReference getResourceReference(String id)
        throws Exception, ResourceException {

        ResourceKey key = new SimpleResourceKey(getKeyTypeName(), id);

        return getResourceReference(key);

    }


    /**
     * Take a resource key managed by this resource, locates the resource, and
     * created a typed EPR for the resource.
     */
    public org.cagrid.tide.context.stubs.types.TideContextReference getResourceReference(ResourceKey key)
        throws Exception {
        MessageContext ctx = MessageContext.getCurrentContext();
        String transportURL = (String) ctx.getProperty(org.apache.axis.MessageContext.TRANS_URL);
        transportURL = transportURL.substring(0, transportURL.lastIndexOf('/') + 1);
        transportURL += "TideContext";
        EndpointReferenceType epr = AddressingUtils.createEndpointReference(transportURL, key);
        org.cagrid.tide.context.stubs.types.TideContextReference ref = new org.cagrid.tide.context.stubs.types.TideContextReference();
        ref.setEndpointReference(epr);
        return ref;
    }


    /**
     * Given the key of a resource managed by this resource home, a type
     * resource will be returned.
     */
    public TideContextResource getResource(ResourceKey key) throws ResourceException {
        TideContextResource thisResource = (TideContextResource) find(key);
        return thisResource;
    }


    /**
     * Get the resouce that is being addressed in this current context
     */
    public TideContextResource getAddressedResource() throws Exception {
        TideContextResource thisResource;
        thisResource = (TideContextResource) ResourceContext.getResourceContext().getResource();
        return thisResource;
    }

}