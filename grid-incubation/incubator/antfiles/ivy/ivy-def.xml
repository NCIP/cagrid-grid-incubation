<project name="ivy-definitions" xmlns:ivy="antlib:org.apache.ivy.ant">

	<dirname property="ivy-definitions.basedir" file="${ant.file.ivy-definitions}" />
	<property name="project.root.dir" location="${ivy-definitions.basedir}/../.." />

	<property name="ivy.jar.dir" value="${ivy-definitions.basedir}/lib" />
	<path id="ivy.lib.path">
		<fileset dir="${ivy.jar.dir}" includes="ivy-*.jar" />
	</path>

	<!-- setup ivy default configuration with some custom info -->
	<property name="repository.dir" location="${project.root.dir}/repository" />
	<property name="integration.repository.dir" location="${project.root.dir}/integration-repository" />


	<target name="init-ivy" unless="ivy.initialized">
		<!-- NOTE: I used to just do this at parse time, but there is a bug in Ant versions < 1.7 
		     with classloaders on taskdefs not getting reclaimed after subant calls, and we would 
		     get OutOfMemory PermGen space.  Such taskdefs live across subant calls, so I only do this once now.
		-->
		<taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path" loaderRef="ivy.loader" />

		<ivy:settings id="ivy.instance" file="${project.root.dir}/antfiles/ivy/ivysettings.xml" override="true" />
		<property name="ivy.initialized" location="true" />
	</target>
</project>
