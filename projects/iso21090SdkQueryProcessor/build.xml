<?xml version="1.0"?>
<!-- ================================================================= -->
<!-- caGrid iso21090SdkQueryProcessor build file                       -->
<!-- ================================================================= -->

<project name="caGrid-iso21090SdkQueryProcessor" default="compile" basedir=".">
	<!-- Environment -->
	<property environment="env" />
	<property file="${basedir}/project.properties" />
	<property file="${basedir}/build.properties" />
	<property name="globus.dir" location="${env.GLOBUS_LOCATION}" />

	<!-- Information -->
	<property name="project.name" value="${ant.project.name}" />
	<property name="java.source" value="1.5" />

	<property name="style.src.dir" value="${basedir}/src/java/style"/>
	<property name="processor.src.dir" value="${basedir}/src/java/processor" />
	<property name="translator.src.dir" value="${basedir}/src/java/translator"/>
	<property name="build.dir" value="${basedir}/build" />
	<property name="javadoc.dir" value="${build.dir}/javadoc" />
	<property name="style.classes.dir" value="${build.dir}/style/classes"/>
	<property name="processor.classes.dir" value="${build.dir}/processor/classes" />
	<property name="translator.classes.dir" value="${build.dir}/translator/classes" />
	<property name="jar.dir" value="${build.dir}/jars" />
	<property name="style.jarfile" value="${jar.dir}/${project.name}-style-${project.version}.jar"/>
	<property name="processor.jarfile" value="${jar.dir}/${project.name}-processor-${project.version}.jar" />
	<property name="tranaslator.jarfile" value="${jar.dir}/${project.name}-translator-${project.version}.jar" />
	<property name="ext.dir" value="${basedir}/ext" />
	<property name="ext.lib.dir" value="${ext.dir}/dependencies/jars" />
	<property name="ext.test.lib.dir" location="${ext.dir}/dependencies/test/jars" />
	<property name="lib.dir" location="${basedir}/lib"/>
	<property name="sdk.client.dir" location="${basedir}/sdk/local-client"/>
	<property name="sdk.lib.dir" location="${sdk.client.dir}/lib"/>
	<property name="sdk.conf.dir" location="${sdk.client.dir}/conf"/>

	<!-- testing stuff -->
	<property name="test.dir" location="${basedir}/test" />
	<property name="test.src.dir" location="${test.dir}/src" />
	<property name="test.classes.dir" location="${build.dir}/test/classes" />
	<property name="test.lib.dir" location="${test.dir}/lib" />
	<property name="test.logs.dir" location="${test.dir}/logs" />
	<property name="test.project.jar" location="${jar.dir}/${project.name}-tests-${project.version}.jar" />
	
	<!-- style related stuff -->
	<property name="introduce.dir" location="../introduce"/>
	<property name="introduce.extensions.dir" location="${introduce.dir}/extensions" />
	<property name="style.info.dir" location="${basedir}/style"/>
	<property name="style.dest.dir" location="${introduce.extensions.dir}/data/styles/cacore43" />
	
	<import file="test.xml"/>
	

	<!-- =============================================================== -->
	<!-- The Build Classpath                                             -->
	<!-- =============================================================== -->
	<path id="build.classpath">
		<fileset dir="${lib.dir}">
			<include name="**/*.jar"/>
		</fileset>
		<fileset dir="${sdk.lib.dir}">
			<include name="**/*.jar"/>
		</fileset>
		<fileset dir="${ext.lib.dir}">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${globus.dir}/lib">
			<include name="**/*.jar" />
			<exclude name="junit.jar" />
		</fileset>
	</path>


	<!-- =============================================================== -->
	<!-- The Run Classpath                                               -->
	<!-- =============================================================== -->
	<path id="run.classpath">
		<path refid="build.classpath" />
		<fileset dir="${jar.dir}">
			<include name="*.jar" />
		</fileset>
		<pathelement path="${sdk.conf.dir}"/>
	</path>
	

	<!-- =============================================================== -->
	<!-- The Test Classpath                                              -->
	<!-- =============================================================== -->
	<path id="test.classpath">
		<path refid="build.classpath" />
		<fileset dir="${ext.test.lib.dir}">
			<include name="**/*.jar" />
		</fileset>
		<pathelement path="${translator.classes.dir}" />
		<pathelement path="${processor.classes.dir}" />
		<pathelement path="${style.classes.dir}"/>
	</path>
	<path id="test.run.classpath">
		<path refid="test.classpath" />
		<pathelement path="${sdk.conf.dir}"/>
		<pathelement path="${test.classes.dir}" />
	</path>


	<!-- =============================================================== -->
	<!-- Prepares the build directory                                    -->
	<!-- =============================================================== -->
	<target name="prepare">
		<tstamp />
		<mkdir dir="${build.dir}" />
	</target>
	

	<!-- =============================================================== -->
	<!-- Compiles the source code                                        -->
	<!-- =============================================================== -->
	<target name="compile" depends="prepare" description="compiles the translator and processor.">
		<mkdir dir="${translator.classes.dir}" />
		<javac srcdir="${translator.src.dir}" destdir="${translator.classes.dir}" source="${java.source}" debug="on" deprecation="off" optimize="on">
			<classpath refid="build.classpath" />
		</javac>
		<mkdir dir="${processor.classes.dir}" />
		<javac srcdir="${processor.src.dir}" destdir="${processor.classes.dir}" source="${java.source}" debug="on" deprecation="on" optimize="on">
			<classpath refid="build.classpath"/>
			<classpath>
				<pathelement location="${translator.classes.dir}"/>
			</classpath>
		</javac>
		<mkdir dir="${style.classes.dir}"/>
		<javac srcdir="${style.src.dir}" destdir="${style.classes.dir}" source="${java.source}" debug="on" deprecation="on" optimize="on">
			<classpath refid="build.classpath"/>
			<classpath>
				<pathelement location="${translator.classes.dir}"/>
				<pathelement location="${processor.classes.dir}"/>
			</classpath>
		</javac>
	</target>

	
	<!-- =============================================================== -->
	<!-- Compiles the test source code                                   -->
	<!-- =============================================================== -->
	<target name="compile-tests" depends="prepare" description="compiles tests.">
		<mkdir dir="${test.classes.dir}" />
		<javac srcdir="${test.src.dir}" destdir="${test.classes.dir}" source="${java.source}" debug="on" deprecation="off" optimize="off">
			<classpath refid="test.classpath" />
		</javac>
	</target>


	<!-- ============================================================== -->
	<!-- Cleans up generated stuff                                      -->
	<!-- ============================================================== -->
	<target name="clean" depends="" description="Removes generated files.">
		<delete dir="${build.dir}" />
	</target>


	<!-- ============================================================== -->
	<!-- Creates the jar files                                          -->
	<!-- ============================================================== -->
	<target name="jar" depends="compile" description="Builds the main Jar Files">
		<mkdir dir="${jar.dir}" />
		<jar jarfile="${tranaslator.jarfile}">
			<fileset dir="${translator.classes.dir}">
				<include name="**/*"/>
			</fileset>
			<fileset dir="${translator.src.dir}">
				<include name="**/*"/>
			</fileset>
			<manifest>
				<attribute name="Built-By" value="${user.name}" />
				<attribute name="Specification-Version" value="${project.version}" />
				<attribute name="Implementation-Version" value="${project.version}" />
			</manifest>
		</jar>
		<jar jarfile="${processor.jarfile}">
			<fileset dir="${processor.classes.dir}">
				<include name="**/*"/>
			</fileset>
			<fileset dir="${processor.src.dir}">
				<include name="**/*"/>
			</fileset>
			<manifest>
				<attribute name="Built-By" value="${user.name}" />
				<attribute name="Specification-Version" value="${project.version}" />
				<attribute name="Implementation-Version" value="${project.version}" />
			</manifest>
		</jar>
		<jar jarfile="${style.jarfile}">
			<fileset dir="${style.classes.dir}">
				<include name="**/*"/>
			</fileset>
			<fileset dir="${style.src.dir}">
				<include name="**/*"/>
			</fileset>
			<manifest>
				<attribute name="Built-By" value="${user.name}" />
				<attribute name="Specification-Version" value="${project.version}" />
				<attribute name="Implementation-Version" value="${project.version}" />
			</manifest>			
		</jar>
	</target>


	<!-- ============================================================== -->
	<!-- Creates the test jar files                                     -->
	<!-- ============================================================== -->
	<target name="jar-tests" depends="compile-tests" description="Builds the test Jar Files">
		<mkdir dir="${jar.dir}" />
		<jar jarfile="${test.project.jar}" basedir="${test.classes.dir}">
			<manifest>
				<attribute name="Built-By" value="${user.name}" />
				<attribute name="Specification-Version" value="${project.version}" />
				<attribute name="Implementation-Version" value="${project.version}" />
			</manifest>
		</jar>
	</target>
	
	
	<!-- installs the service style -->
	<target name="installServiceStyle" description="Installs the SDK 4.3 data service style">
		<echo message="Installing Data Service Style SDK v 4.3" />
		<!-- some properties for the install -->
		<!-- make requisite directories -->
		<delete dir="${style.dest.dir}" />
		<mkdir dir="${style.dest.dir}" />
		<mkdir dir="${style.dest.dir}/lib" />
		<mkdir dir="${style.dest.dir}/schemas"/>
		<!-- copy in the info -->
		<copy todir="${style.dest.dir}">
			<fileset dir="${style.info.dir}">
				<include name="**/*"/>
			</fileset>
		</copy>
		<!-- copy in the style's jar file -->
		<copy todir="${style.dest.dir}/lib">
			<!-- the style itself and query processor -->
			<fileset dir="${jar.dir}">
				<include name="*.jar" />
			</fileset>
			<!-- copy the SDK common style jar file and CQL 2 query engine -->
			<fileset dir="${ext.lib.dir}">
				<include name="*sdkstyle*.jar" />
				<include name="commons-*.jar"/>
				<include name="jaxb*.jar"/>
				<include name="xmi.in.out*.jar"/>
				<include name="caGrid-iso21090DomainModelTools*.jar"/>
			</fileset>
			<fileset dir="${sdk.lib.dir}" >
				<include name="sdk-client-framework-4.3.jar"/>
			</fileset>
		</copy>
		<!-- copy the ISO schemas someplace we can get them -->
		<copy todir="${style.dest.dir}/schemas">
			<fileset dir="${basedir}/schemas">
				<include name="*.xsd"/>
			</fileset>
		</copy>
	</target>


	<!-- allows style to be installed by top-level build -->
	<target name="installIntroduceExtensions" depends="installServiceStyle" />

	
	<!-- =================================================================== -->
	<!-- Builds Code Docuementation                                          -->
	<!-- =================================================================== -->
	<target name="javadoc" depends="compile" description="Creates the API documentation.">
		<javadoc packagenames="*" destdir="${javadoc.dir}" author="true" version="true" use="true" windowtitle="${project.name} API">
			<sourcepath>
				<pathelement path="${translator.src.dir}" />
				<pathelement path="${processor.src.dir}" />
			</sourcepath>

			<classpath>
				<path refid="build.classpath" />
			</classpath>

			<tag name="todo" scope="all" description="To do:" />
			<tag name="created" scope="all" description="Created On:" />
		</javadoc>
	</target>


	<!-- ============================================================== -->
	<!-- Builds from scratch                                            -->
	<!-- ============================================================== -->
	<target name="all" description="Builds the entire application" depends="jar,jar-tests" />
</project>

