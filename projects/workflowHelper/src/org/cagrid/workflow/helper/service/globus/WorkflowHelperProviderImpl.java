package org.cagrid.workflow.helper.service.globus;

import org.cagrid.workflow.helper.service.WorkflowHelperImpl;

import java.rmi.RemoteException;

/** 
 * DO NOT EDIT:  This class is autogenerated!
 *
 * This class implements each method in the portType of the service.  Each method call represented
 * in the port type will be then mapped into the unwrapped implementation which the user provides
 * in the WorkflowHelperImpl class.  This class handles the boxing and unboxing of each method call
 * so that it can be correclty mapped in the unboxed interface that the developer has designed and 
 * has implemented.  Authorization callbacks are automatically made for each method based
 * on each methods authorization requirements.
 * 
 * @created by Introduce Toolkit version 1.2
 * 
 */
public class WorkflowHelperProviderImpl{
	
	WorkflowHelperImpl impl;
	
	public WorkflowHelperProviderImpl() throws RemoteException {
		impl = new WorkflowHelperImpl();
	}
	

    public org.cagrid.workflow.helper.stubs.CreateWorkflowInstanceHelperResponse createWorkflowInstanceHelper(org.cagrid.workflow.helper.stubs.CreateWorkflowInstanceHelperRequest params) throws RemoteException {
    org.cagrid.workflow.helper.stubs.CreateWorkflowInstanceHelperResponse boxedResult = new org.cagrid.workflow.helper.stubs.CreateWorkflowInstanceHelperResponse();
    boxedResult.setWorkflowInstanceHelperReference(impl.createWorkflowInstanceHelper(params.getWorkflowInstanceHelperDescriptor().getWorkflowInstanceHelperDescriptor()));
    return boxedResult;
  }

}
